<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dows.auth.crud.dao.OauthAuthorizationDao">

    <resultMap type="org.dows.auth.crud.entity.OauthAuthorization" id="OauthAuthorizationMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="registeredClientId" column="registered_client_id" jdbcType="VARCHAR"/>
        <result property="principalName" column="principal_name" jdbcType="VARCHAR"/>
        <result property="authorizationGrantType" column="authorization_grant_type" jdbcType="VARCHAR"/>
        <result property="attributes" column="attributes" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="VARCHAR"/>
        <result property="authorizationCodeValue" column="authorization_code_value" jdbcType="VARCHAR"/>
        <result property="authorizationCodeIssuedAt" column="authorization_code_issued_at" jdbcType="TIMESTAMP"/>
        <result property="authorizationCodeExpiresAt" column="authorization_code_expires_at" jdbcType="TIMESTAMP"/>
        <result property="authorizationCodeMetadata" column="authorization_code_metadata" jdbcType="VARCHAR"/>
        <result property="accessTokenValue" column="access_token_value" jdbcType="VARCHAR"/>
        <result property="accessTokenIssuedAt" column="access_token_issued_at" jdbcType="TIMESTAMP"/>
        <result property="accessTokenExpiresAt" column="access_token_expires_at" jdbcType="TIMESTAMP"/>
        <result property="accessTokenMetadata" column="access_token_metadata" jdbcType="VARCHAR"/>
        <result property="accessTokenType" column="access_token_type" jdbcType="VARCHAR"/>
        <result property="accessTokenScopes" column="access_token_scopes" jdbcType="VARCHAR"/>
        <result property="oidcIdTokenValue" column="oidc_id_token_value" jdbcType="VARCHAR"/>
        <result property="oidcIdTokenIssuedAt" column="oidc_id_token_issued_at" jdbcType="TIMESTAMP"/>
        <result property="oidcIdTokenExpiresAt" column="oidc_id_token_expires_at" jdbcType="TIMESTAMP"/>
        <result property="oidcIdTokenMetadata" column="oidc_id_token_metadata" jdbcType="VARCHAR"/>
        <result property="refreshTokenValue" column="refresh_token_value" jdbcType="VARCHAR"/>
        <result property="refreshTokenIssuedAt" column="refresh_token_issued_at" jdbcType="TIMESTAMP"/>
        <result property="refreshTokenExpiresAt" column="refresh_token_expires_at" jdbcType="TIMESTAMP"/>
        <result property="refreshTokenMetadata" column="refresh_token_metadata" jdbcType="VARCHAR"/>
        <result property="oidcIdTokenClaims" column="oidc_id_token_claims" jdbcType="VARCHAR"/>
        <result property="dt" column="dt" jdbcType="TIMESTAMP"/>
        <result property="deleted" column="deleted" jdbcType="BOOLEAN"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into dows_uim.oauth_authorization(registered_client_id, principal_name, authorization_grant_type,
        attributes, state, authorization_code_value, authorization_code_issued_at, authorization_code_expires_at,
        authorization_code_metadata, access_token_value, access_token_issued_at, access_token_expires_at,
        access_token_metadata, access_token_type, access_token_scopes, oidc_id_token_value, oidc_id_token_issued_at,
        oidc_id_token_expires_at, oidc_id_token_metadata, refresh_token_value, refresh_token_issued_at,
        refresh_token_expires_at, refresh_token_metadata, oidc_id_token_claims, dt, deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.registeredClientId}, #{entity.principalName}, #{entity.authorizationGrantType},
            #{entity.attributes}, #{entity.state}, #{entity.authorizationCodeValue},
            #{entity.authorizationCodeIssuedAt}, #{entity.authorizationCodeExpiresAt},
            #{entity.authorizationCodeMetadata}, #{entity.accessTokenValue}, #{entity.accessTokenIssuedAt},
            #{entity.accessTokenExpiresAt}, #{entity.accessTokenMetadata}, #{entity.accessTokenType},
            #{entity.accessTokenScopes}, #{entity.oidcIdTokenValue}, #{entity.oidcIdTokenIssuedAt},
            #{entity.oidcIdTokenExpiresAt}, #{entity.oidcIdTokenMetadata}, #{entity.refreshTokenValue},
            #{entity.refreshTokenIssuedAt}, #{entity.refreshTokenExpiresAt}, #{entity.refreshTokenMetadata},
            #{entity.oidcIdTokenClaims}, #{entity.dt}, #{entity.deleted})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into dows_uim.oauth_authorization(registered_client_id, principal_name, authorization_grant_type,
        attributes, state, authorization_code_value, authorization_code_issued_at, authorization_code_expires_at,
        authorization_code_metadata, access_token_value, access_token_issued_at, access_token_expires_at,
        access_token_metadata, access_token_type, access_token_scopes, oidc_id_token_value, oidc_id_token_issued_at,
        oidc_id_token_expires_at, oidc_id_token_metadata, refresh_token_value, refresh_token_issued_at,
        refresh_token_expires_at, refresh_token_metadata, oidc_id_token_claims, dt, deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.registeredClientId}, #{entity.principalName}, #{entity.authorizationGrantType},
            #{entity.attributes}, #{entity.state}, #{entity.authorizationCodeValue},
            #{entity.authorizationCodeIssuedAt}, #{entity.authorizationCodeExpiresAt},
            #{entity.authorizationCodeMetadata}, #{entity.accessTokenValue}, #{entity.accessTokenIssuedAt},
            #{entity.accessTokenExpiresAt}, #{entity.accessTokenMetadata}, #{entity.accessTokenType},
            #{entity.accessTokenScopes}, #{entity.oidcIdTokenValue}, #{entity.oidcIdTokenIssuedAt},
            #{entity.oidcIdTokenExpiresAt}, #{entity.oidcIdTokenMetadata}, #{entity.refreshTokenValue},
            #{entity.refreshTokenIssuedAt}, #{entity.refreshTokenExpiresAt}, #{entity.refreshTokenMetadata},
            #{entity.oidcIdTokenClaims}, #{entity.dt}, #{entity.deleted})
        </foreach>
        on duplicate key update
        registered_client_id = values(registered_client_id) , principal_name = values(principal_name) ,
        authorization_grant_type = values(authorization_grant_type) , attributes = values(attributes) , state =
        values(state) , authorization_code_value = values(authorization_code_value) , authorization_code_issued_at =
        values(authorization_code_issued_at) , authorization_code_expires_at = values(authorization_code_expires_at) ,
        authorization_code_metadata = values(authorization_code_metadata) , access_token_value =
        values(access_token_value) , access_token_issued_at = values(access_token_issued_at) , access_token_expires_at =
        values(access_token_expires_at) , access_token_metadata = values(access_token_metadata) , access_token_type =
        values(access_token_type) , access_token_scopes = values(access_token_scopes) , oidc_id_token_value =
        values(oidc_id_token_value) , oidc_id_token_issued_at = values(oidc_id_token_issued_at) ,
        oidc_id_token_expires_at = values(oidc_id_token_expires_at) , oidc_id_token_metadata =
        values(oidc_id_token_metadata) , refresh_token_value = values(refresh_token_value) , refresh_token_issued_at =
        values(refresh_token_issued_at) , refresh_token_expires_at = values(refresh_token_expires_at) ,
        refresh_token_metadata = values(refresh_token_metadata) , oidc_id_token_claims = values(oidc_id_token_claims) ,
        dt = values(dt) , deleted = values(deleted)
    </insert>

</mapper>

